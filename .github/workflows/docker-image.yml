name: Docker Image CI

on:
  workflow_dispatch:
  push:
    branches: [main, feature/*]
  pull_request:
    branches: [main]
  release:
    types: [created]

jobs:
  lint-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 18
      - run: npm ci
      - run: npm run build
      - run: npm run lint
      - run: npm run test

  bump-version:
    runs-on: ubuntu-latest
    if: ${{ startsWith(github.ref, 'refs/heads/main')}}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 18
          registry-url: https://registry.npmjs.org/
      - run: npm ci
      - run: npm run lint
      - name: 'Automated Version Bump'
        if: ${{ github.event.head_commit.author.username == 'dependabot[bot]' }}
        uses: 'phips28/gh-action-bump-version@master'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag-prefix: 'v'
          version-type: 'patch'
      - name: 'Automated Version Bump'
        if: ${{ github.event.head_commit.author.username != 'dependabot[bot]' }}
        uses: 'phips28/gh-action-bump-version@master'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag-prefix: 'v'


  build-docker:
    runs-on: ubuntu-latest
    if: ${{ startsWith(github.ref, 'refs/heads/main') || github.event_name == 'workflow_dispatch' || github.event_name == 'release'  }}
    needs: [bump-version, lint-test]

    steps:
      - uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: lukaspanni
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Login to GitHub container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: 'arm64'

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            lukaspanni/top-lists
            ghcr.io/${{ github.repository }}
          tags: |
            type=raw,value=latest,enable=${{ (github.ref == 'refs/heads/main') || startsWith(github.ref, 'refs/tags/') }}
            type=raw,value=stable,enable=${{ github.event_name == 'release' }}

      - name: Build and push Docker images
        uses: docker/build-push-action@v5
        id: imagebuild
        with:
          context: .
          push: true
          platforms: linux/amd64, linux/arm64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
  
  deploy:
    needs: build-docker
    if: ${{ github.event_name == 'release'  }}
    runs-on: ubuntu-latest
    
    steps:
      - name: Trigger Deployment
        env:
          GH_TOKEN: ${{ secrets.CD_TOKEN }}
        run: |
          gh api repos/lukaspanni/infrastructure/dispatches --input - <<< '{"event_type": "${{ github.event.repository.name }}", "client_payload": { "kubernetes-config": "top-lists.yml", "image-name": "ghcr.io/lukaspanni/spotify-stats", "image-sha": "${{ steps.imagebuild.outputs.digest }}" }'
